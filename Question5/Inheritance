Java Inheritance defines an is-a relationship between a superclass and its subclasses. This means that an object of a subclass 
can be used wherever an object of the superclass can be used. Class Inheritance in java mechanism is used to build new classes 
from existing classes. The inheritance relationship is transitive: if class x extends class y, then a class z, which extends 
class x, will also inherit from class y.

Example code: 

public class DoubleDice extends Dice implements Runnable {


	/** The thread name. */
	String threadName;

	/**
	 * Instantiates a new double dice.
	 */
	public DoubleDice() {
		setNoOfDice(2);
	}

	/**
	 * Instantiates a new double dice.
	 *
	 * @param threadName the thread name
	 */
	public DoubleDice(String threadName) {
		setNoOfDice(2);
		this.threadName = threadName;
	}

	/**
	 * The main method.
	 *
	 * @param args the arguments
	 */
	public static void main(String[] args) {
		DoubleDice dice = new DoubleDice();
		System.out.println(dice.toString());
	}
